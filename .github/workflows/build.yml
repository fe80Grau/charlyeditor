name: Build and Release project

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # Permisos para escribir contenido y crear releases

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check Python version
      run: python --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile charly.py
        pyinstaller --onefile charly_gui.py

    - name: Archive build outputs
      uses: actions/upload-artifact@v3
      with:
        name: executables-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: |
          executables-ubuntu-latest-3.10
          executables-windows-latest-3.10
          executables-macos-latest-3.10
        path: ./dist

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Usar el PAT
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/charly
        asset_name: charly-ubuntu-latest-${{ matrix.python-version }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Usar el PAT

    - name: Upload Release Asset for GUI for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/charly_gui
        asset_name: charly_gui-ubuntu-latest-${{ matrix.python-version }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Usar el PAT

    - name: Upload Release Asset for Windows
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/charly.exe  # Asumiendo .exe para Windows
        asset_name: charly-windows-latest-${{ matrix.python-version }}.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Usar el PAT

    - name: Upload Release Asset for GUI for Windows
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/charly_gui.exe  # Asumiendo .exe para Windows
        asset_name: charly_gui-windows-latest-${{ matrix.python-version }}.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Usar el PAT

    - name: Upload Release Asset for macOS
      if: matrix.os == 'macos-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/charly  # Asumiendo binario sin extensión para macOS
        asset_name: charly-macos-latest-${{ matrix.python-version }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Usar el PAT

    - name: Upload Release Asset for GUI for macOS
      if: matrix.os == 'macos-latest'
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/charly_gui  # Asumiendo binario sin extensión para macOS
        asset_name: charly_gui-macos-latest-${{ matrix.python-version }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # Usar el PAT