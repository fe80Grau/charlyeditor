name: Build and Release project

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write 

env:
  VERSION: ${{ github.ref_name }}

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Set up Python
        uses: actions/setup-python@v4 
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check Python version
        run: python --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --hidden-import=scipy._lib.array_api_compat.numpy.fft --hidden-import=scipy.special._ufuncs --hidden-import=scipy.special._ufuncs_cxx --hidden-import=scipy.special._special_ufuncs charly.py
          pyinstaller --onefile --hidden-import=scipy._lib.array_api_compat.numpy.fft --hidden-import=scipy.special._ufuncs --hidden-import=scipy.special._ufuncs_cxx --hidden-import=scipy.special._special_ufuncs charly_gui.py
      - name: Archive charly
        uses: actions/upload-artifact@v4  # Actualizar a v4 para Node.js 20
        with:
          name: charly-${{ matrix.os }}
          path: dist/charly*
      
      - name: Archive charly_gui
        uses: actions/upload-artifact@v4  # Actualizar a v4 para Node.js 20
        with:
          name: charly_gui-${{ matrix.os }}
          path: dist/charly_gui*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Asegúrate de usar la versión más reciente compatible con Node.js 20

      - name: Create directories
        run: |
          mkdir -p artifacts/ubuntu-latest
          mkdir -p artifacts/windows-latest
          mkdir -p artifacts/macos-latest

      - name: Download charly for Ubuntu
        uses: actions/download-artifact@v4  # Asegúrate de usar la versión más reciente compatible con Node.js 20
        with:
          name: charly-ubuntu-latest
          path: artifacts/ubuntu-latest/

      - name: Download charly_gui for Ubuntu
        uses: actions/download-artifact@v4  # Asegúrate de usar la versión más reciente compatible con Node.js 20
        with:
          name: charly_gui-ubuntu-latest
          path: artifacts/ubuntu-latest/

      - name: Download charly for Windows
        uses: actions/download-artifact@v4  # Asegúrate de usar la versión más reciente compatible con Node.js 20
        with:
          name: charly-windows-latest
          path: artifacts/windows-latest/

      - name: Download charly_gui for Windows
        uses: actions/download-artifact@v4  # Asegúrate de usar la versión más reciente compatible con Node.js 20
        with:
          name: charly_gui-windows-latest
          path: artifacts/windows-latest/

      - name: Download charly for macOS
        uses: actions/download-artifact@v4  # Asegúrate de usar la versión más reciente compatible con Node.js 20
        with:
          name: charly-macos-latest
          path: artifacts/macos-latest/

      - name: Download charly_gui for macOS
        uses: actions/download-artifact@v4  # Asegúrate de usar la versión más reciente compatible con Node.js 20
        with:
          name: charly_gui-macos-latest
          path: artifacts/macos-latest/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset for Ubuntu
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ubuntu-latest/charly
          asset_name: charly-ubuntu-${{ env.VERSION }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset for GUI for Ubuntu
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ubuntu-latest/charly_gui
          asset_name: charly_gui-ubuntu-${{ env.VERSION }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows-latest/charly.exe
          asset_name: charly-windows-${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset for GUI for Windows
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/windows-latest/charly_gui.exe
          asset_name: charly_gui-windows-${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset for macOS
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/macos-latest/charly
          asset_name: charly-macos-${{ env.VERSION }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset for GUI for macOS
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/macos-latest/charly_gui
          asset_name: charly_gui-macos-${{ env.VERSION }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}